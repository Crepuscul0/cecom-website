#!/usr/bin/env node

/**
 * Script para importar contenido del RSS de Extreme Networks al blog de CECOM
 * Uso: node scripts/import-extreme-rss.js [--limit=10] [--dry-run]
 */

const { importRSSToPayload } = require('../src/lib/rss-importer')

async function main() {
  const args = process.argv.slice(2)
  const limitArg = args.find(arg => arg.startsWith('--limit='))
  const dryRun = args.includes('--dry-run')
  
  const limit = limitArg ? parseInt(limitArg.split('=')[1]) : 10
  
  console.log('üöÄ Iniciando importaci√≥n del RSS de Extreme Networks...')
  console.log(`üìä L√≠mite de art√≠culos: ${limit}`)
  console.log(`üß™ Modo prueba: ${dryRun ? 'S√ç' : 'NO'}`)
  console.log('‚îÄ'.repeat(50))
  
  if (dryRun) {
    console.log('‚ö†Ô∏è  MODO PRUEBA - No se guardar√°n datos en la base de datos')
    // Aqu√≠ podr√≠as implementar una versi√≥n de prueba que solo muestre qu√© se importar√≠a
    return
  }
  
  try {
    const result = await importRSSToPayload(limit)
    
    console.log('‚úÖ Importaci√≥n completada!')
    console.log(`üìù Art√≠culos importados: ${result.imported}`)
    console.log(`üìä Total disponibles: ${result.total}`)
    
    if (result.imported > 0) {
      console.log('\nüìã Art√≠culos importados:')
      result.results.forEach((item, index) => {
        console.log(`  ${index + 1}. ${item.spanish.title}`)
      })
    }
    
  } catch (error) {
    console.error('‚ùå Error durante la importaci√≥n:', error.message)
    process.exit(1)
  }
}

// Ejecutar solo si es llamado directamente
if (require.main === module) {
  main()
}
